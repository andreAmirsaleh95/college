(2.1) There were almost 100,000 fewer misses when the block size was changed to
	  64 bytes (from 8 bytes). This is due to spatial locality.

(2.2) There are even fewer misses than in the last question!!!! AMAZING!!!!!!!!
      This is due to temporal locality.

(2.3) Obviously, the total demand miss rate decreases as the size of the cache
	  increases. More specifically though, capacity misses and conflict misses
	  both decrease as the cache size increases because of temporal locality.
	  If we think of a hotel as the cache and guests as the data, capacity
	  misses are like when a guest can't check-in because all of the rooms
	  (blocks) are taken, and conflict misses occur when a guest cannot access
	  their desired room.

(2.4) 2-way associativity produced a higher demand miss rate than 1-way
	  associativity. Following a trend, 4-way associativity produced a higher
	  demand miss rate than 2-way associativity. More specifically, conflict
	  misses increased as the associativity increased because our cache size
	  is small, so our cache is "saturated" with data. Basically, the number
	  of indices decreases as associativity increases, which is not beneficial
	  with such a small cache size.

(2.5) Now that the cache size is bigger, the demand miss rate decreases as the
	  associativity increases. More specifically, the number of conflict misses
	  decreases as the associativity increases. In this case, there are less
	  memory addresses per index, so when the associativity increases, the
	  number of conflict misses decrease.


Exercise 3
Worked with: Stefano Cobelli

After trying several different combinations of block size and cache size, I
have concluded that the best balance between low miss rate and small block size
is a 16k unified cache with 32 byte block size. Basically, you get the most bang
for your buck with said cache -- the "bang" being the miss rate and the "buck"
being the block size. Making the cache and block sizes any smaller significantly
increases the miss rate. Making the cache and block sizes any larger produces a
lower miss rate but not significantly lower.

Larger cache and block sizes will likely decrease the miss rate, but, depending
on the application (no pun intended), larger cache and block sizes may actually
hinder the overall performance.

32k, 64:
---Simulation begins.
---Simulation complete.
l1-ucache
 Metrics		      Total	      Instrn	       Data	       Read	      Write	       Misc
 -----------------	      ------	      ------	      ------	      ------	      ------	      ------
 Demand Fetches		     3291179	           0	     3291179	     3068739	      222440	           0
  Fraction of total	      1.0000	      0.0000	      1.0000	      0.9324	      0.0676	      0.0000

 Demand Misses		        5088	           0	        5088	        3805	        1283	           0
  Demand miss rate	      0.0015	      0.0000	      0.0015	      0.0012	      0.0058	      0.0000
   Compulsory misses	        3164	           0	        3164	        2145	        1019	           0
   Capacity misses	         915	           0	         915	         821	          94	           0
   Conflict misses	        1009	           0	        1009	         839	         170	           0
   Compulsory fraction	      0.6219	      0.0000	      0.6219	      0.5637	      0.7942	      0.0000
   Capacity fraction	      0.1798	      0.0000	      0.1798	      0.2158	      0.0733	      0.0000
   Conflict fraction	      0.1983	      0.0000	      0.1983	      0.2205	      0.1325	      0.0000

 Multi-block refs               167
 Bytes From Memory	      325632
 ( / Demand Fetches)	      0.0989
 Bytes To Memory	       99264
 ( / Demand Writes)	      0.4463
 Total Bytes r/w Mem	      424896
 ( / Demand Fetches)	      0.1291

---Execution complete.

16k, 32:
---Simulation complete.
l1-ucache
 Metrics		      Total	      Instrn	       Data	       Read	      Write	       Misc
 -----------------	      ------	      ------	      ------	      ------	      ------	      ------
 Demand Fetches		     3291339	           0	     3291339	     3068755	      222584	           0
  Fraction of total	      1.0000	      0.0000	      1.0000	      0.9324	      0.0676	      0.0000

 Demand Misses		      208117	           0	      208117	      165447	       42670	           0
  Demand miss rate	      0.0632	      0.0000	      0.0632	      0.0539	      0.1917	      0.0000
   Compulsory misses	        5951	           0	        5951	        3989	        1962	           0
   Capacity misses	       13974	           0	       13974	       13491	         483	           0
   Conflict misses	      188192	           0	      188192	      147967	       40225	           0
   Compulsory fraction	      0.0286	      0.0000	      0.0286	      0.0241	      0.0460	      0.0000
   Capacity fraction	      0.0671	      0.0000	      0.0671	      0.0815	      0.0113	      0.0000
   Conflict fraction	      0.9043	      0.0000	      0.9043	      0.8943	      0.9427	      0.0000

 Multi-block refs               327
 Bytes From Memory	     6659744
 ( / Demand Fetches)	      2.0234
 Bytes To Memory	     1990752
 ( / Demand Writes)	      8.9438
 Total Bytes r/w Mem	     8650496
 ( / Demand Fetches)	      2.6283

---Execution complete.

16k, 16:
---Simulation complete.
l1-ucache
 Metrics		      Total	      Instrn	       Data	       Read	      Write	       Misc
 -----------------	      ------	      ------	      ------	      ------	      ------	      ------
 Demand Fetches		     3291647	           0	     3291647	     3068788	      222859	           0
  Fraction of total	      1.0000	      0.0000	      1.0000	      0.9323	      0.0677	      0.0000

 Demand Misses		      236425	           0	      236425	      191633	       44792	           0
  Demand miss rate	      0.0718	      0.0000	      0.0718	      0.0624	      0.2010	      0.0000
   Compulsory misses	       11232	           0	       11232	        7533	        3699	           0
   Capacity misses	       26300	           0	       26300	       25403	         897	           0
   Conflict misses	      198893	           0	      198893	      158697	       40196	           0
   Compulsory fraction	      0.0475	      0.0000	      0.0475	      0.0393	      0.0826	      0.0000
   Capacity fraction	      0.1112	      0.0000	      0.1112	      0.1326	      0.0200	      0.0000
   Conflict fraction	      0.8413	      0.0000	      0.8413	      0.8281	      0.8974	      0.0000

 Multi-block refs               635
 Bytes From Memory	     3782736
 ( / Demand Fetches)	      1.1492
 Bytes To Memory	     1219760
 ( / Demand Writes)	      5.4732
 Total Bytes r/w Mem	     5002496
 ( / Demand Fetches)	      1.5198

---Execution complete.

8k, 8:
---Simulation complete.
l1-ucache
 Metrics		      Total	      Instrn	       Data	       Read	      Write	       Misc
 -----------------	      ------	      ------	      ------	      ------	      ------	      ------
 Demand Fetches		     3292284	           0	     3292284	     3068865	      223419	           0
  Fraction of total	      1.0000	      0.0000	      1.0000	      0.9321	      0.0679	      0.0000

 Demand Misses		      546499	           0	      546499	      470368	       76131	           0
  Demand miss rate	      0.1660	      0.0000	      0.1660	      0.1533	      0.3408	      0.0000
   Compulsory misses	       18564	           0	       18564	       11511	        7053	           0
   Capacity misses	      168359	           0	      168359	      166552	        1807	           0
   Conflict misses	      359576	           0	      359576	      292305	       67271	           0
   Compulsory fraction	      0.0340	      0.0000	      0.0340	      0.0245	      0.0926	      0.0000
   Capacity fraction	      0.3081	      0.0000	      0.3081	      0.3541	      0.0237	      0.0000
   Conflict fraction	      0.6580	      0.0000	      0.6580	      0.6214	      0.8836	      0.0000

 Multi-block refs              1272
 Bytes From Memory	     3772304
 ( / Demand Fetches)	      1.1458
 Bytes To Memory	     1123808
 ( / Demand Writes)	      5.0300
 Total Bytes r/w Mem	     4896112
 ( / Demand Fetches)	      1.4871

---Execution complete.

^ Error: Execution will officially be completed in a couple days
