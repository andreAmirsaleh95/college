/* *****************************************
 * CSCI205 - Software Engineering and Design
 * Spring 2016
 *
 * Name: Andre Amirsaleh
 * Date: Mar 25, 2016
 * Time: 8:04:22 PM
 *
 * Project: csci205
 * Package: lab13
 * File: MainView
 * Description:
 *
 * ****************************************
 */
package lab13;

import javax.swing.JLabel;
import javax.swing.JRadioButton;
import javax.swing.JSlider;
import javax.swing.JTextField;
import javax.swing.UIManager;

/**
 * Class to view code generated by the GUI builder
 *
 * @author Andre Amirsaleh
 */
public class MainView extends javax.swing.JFrame {

    /**
     * Creates new form MainView
     */
    public MainView() {
        initComponents();
    }

    /**
     * Returns <code>lblCurTemp</code> attribute
     *
     * @return Current temperature to convert
     */
    public JLabel getLblCurTemp() {
        return lblCurTemp;
    }

    /**
     * Returns <code>rdbtnCelTemp</code> attribute
     *
     * @return Button indicating that the units for the temperature to convert
     * is Celsius
     */
    public JRadioButton getRdbtnCelTemp() {
        return rdbtnCelTemp;
    }

    /**
     * rdbtnCelTemp Returns <code>rdbtnFahTemp</code> attribute
     *
     * @return Button indicating that the units for the temperature to convert
     * is Fahrenheit
     */
    public JRadioButton getRdbtnFahTemp() {
        return rdbtnFahTemp;
    }

    /**
     * Returns <code>sliderTemp</code> attribute
     *
     * @return Temperature as inputted via the slider
     */
    public JSlider getSliderTemp() {
        return sliderTemp;
    }

    /**
     * Returns <code>textMaxTemp</code> attribute
     *
     * @return Maximum temperature of slider - depends on units
     */
    public JTextField getTextMaxTemp() {
        return textMaxTemp;
    }

    /**
     * Returns <code>textMinTemp</code> attribute
     *
     * @return Minimum temperature of slider - depends on units
     */
    public JTextField getTextMinTemp() {
        return textMinTemp;
    }

    /**
     * Returns <code>textTempKelvin</code> attribute
     *
     * @return Temperature in Kelvin
     */
    public JTextField getTextTempKelvin() {
        return textTempKelvin;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.ButtonGroup buttonGroupTemp = new javax.swing.ButtonGroup();
        javax.swing.JPanel panelTempUnits = new javax.swing.JPanel();
        rdbtnFahTemp = new javax.swing.JRadioButton();
        rdbtnCelTemp = new javax.swing.JRadioButton();
        panelSwingContainer = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        sliderTemp = new javax.swing.JSlider();
        javax.swing.JPanel panelTempRange = new javax.swing.JPanel();
        textMinTemp = new javax.swing.JTextField();
        lblCurTemp = new javax.swing.JLabel();
        textMaxTemp = new javax.swing.JTextField();
        javax.swing.JPanel panelTempKelvin = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        textTempKelvin = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kelvin Converter");
        getContentPane().setLayout(new java.awt.BorderLayout(5, 5));

        panelTempUnits.setBorder(javax.swing.BorderFactory.createTitledBorder("Temperature"));
        panelTempUnits.setLayout(new java.awt.GridLayout(0, 1));

        buttonGroupTemp.add(rdbtnFahTemp);
        rdbtnFahTemp.setText("Fahrenheit");
        rdbtnFahTemp.setToolTipText("");
        panelTempUnits.add(rdbtnFahTemp);

        buttonGroupTemp.add(rdbtnCelTemp);
        rdbtnCelTemp.setText("Celsius");
        panelTempUnits.add(rdbtnCelTemp);

        getContentPane().add(panelTempUnits, java.awt.BorderLayout.LINE_START);

        panelSwingContainer.setLayout(new java.awt.GridLayout(0, 1));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("<html>Use the slider to<br/>adjust the temperature</html>");
        panelSwingContainer.add(jLabel1);
        panelSwingContainer.add(sliderTemp);

        textMinTemp.setEditable(false);
        textMinTemp.setColumns(5);
        textMinTemp.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        textMinTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textMinTempActionPerformed(evt);
            }
        });
        panelTempRange.add(textMinTemp);

        lblCurTemp.setText("0.0");
        panelTempRange.add(lblCurTemp);

        textMaxTemp.setEditable(false);
        textMaxTemp.setColumns(5);
        textMaxTemp.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        panelTempRange.add(textMaxTemp);

        panelSwingContainer.add(panelTempRange);

        getContentPane().add(panelSwingContainer, java.awt.BorderLayout.CENTER);

        jLabel2.setText("Temperature in Kelvin:");
        panelTempKelvin.add(jLabel2);

        textTempKelvin.setEditable(false);
        textTempKelvin.setBackground(new java.awt.Color(0, 0, 0));
        textTempKelvin.setColumns(10);
        textTempKelvin.setForeground(new java.awt.Color(153, 51, 255));
        textTempKelvin.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panelTempKelvin.add(textTempKelvin);

        getContentPane().add(panelTempKelvin, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textMinTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textMinTempActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textMinTempActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            /*for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
             if ("Nimbus".equals(info.getName())) {
             javax.swing.UIManager.setLookAndFeel(info.getClassName());
             break;
             }
             }*/
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblCurTemp;
    private javax.swing.JPanel panelSwingContainer;
    private javax.swing.JRadioButton rdbtnCelTemp;
    private javax.swing.JRadioButton rdbtnFahTemp;
    private javax.swing.JSlider sliderTemp;
    private javax.swing.JTextField textMaxTemp;
    private javax.swing.JTextField textMinTemp;
    private javax.swing.JTextField textTempKelvin;
    // End of variables declaration//GEN-END:variables
}
