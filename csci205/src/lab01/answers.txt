/* *****************************************
* CSCI205 - Software Engineering and Design
* Spring 2016
* Instructor: Brian King
* Section: List time of your lecture
*
* Name: Andre Amirsaleh
* Date: 1/22/2016
*
* Lab / Assignment:
*
* Description:
*
* *****************************************/


1.1 /home/accounts/student/a/aa026/Desktop
1.2 -a stands for "all" which lists directories that start with a .
1.3 -l use a long listing format
1.4 -t sorts by modification time. Most recent modifications are listed first.
1.5 -t -r
1.6 -S
1.7 csci205:
total 4
drwx--x--x 3 aa026 student 4096 Jan 20 13:52 src

csci205/src:
total 4
drwx--x--x 2 aa026 student 4096 Jan 21 16:26 lab01

csci205/src/lab01:
total 8
-rw------- 1 aa026 student 245 Jan 21 16:26 answers.txt
-rw------- 1 aa026 student 244 Jan 21 16:25 answers.txt~
2.1 A version control system keeps track of the changes you make to a file or
set of files so that you can recall older versions.
2.2 Local VCSs are useful because they help prevent errors
dealing with a separate directory. This method would be a practical solution
for a single programmer who does not need to share his work with teammates.
Centralized VCSs work well for teams of programmers. Distributed VCSs are
good for teams of programmers that need a fail-safe system in case they are
worried about the centralized server crashing.
2.3 Git is a Distributed VCS.
2.4 Most operations in Git are performed locally means that Git does not need
information from other computers on the network. This improves speed, but it
also means that you do not have to rely on internet connection to use Git.
2.5 Git basically only adds data to its database so that you never lose any
object you commit.
2.6 First, you edit and save your work locally. Then, you stage your file,
which adds a snapshot of the file to the staging area. Finally, you perform a
commit, which permanently stores the snapshot onto your Git directory.
3.1 Bytecodes are the machine language of the Java Virtual Machine. Bytecodes
are generated by the javac compiler when .java source files are compiled into
.class files.
3.2 Because the Java VM is available on many different operating systems, the
same .class files are capable of running on Microsoft Windows, the Solaris
Operating System (Solaris OS), Linux, or Mac OS.
3.3 It's a slower, more complex process to compile code.
3.4 "Write less code" and "Develop programs more quickly" are claims that are
relative to C/C++, which is one of the most complex programming languages.
3.5 /* text */
/** documentation */
// text (ignores everything to the end of the line)
3.6 Use the terminal to navigate to the program's folder. Then, compile the
program with:
$ javac Myprogram.java
Then, run the program with:
$ java folderName.MyProgram
4.1 Prints a string and then terminate the line.
4.2 The object in is the "standard" input stream, which is of type InputStream.
5.1 All of the operands are integers; therefore, the result will be an integer.
5.2 The code outputs 1.0 because all of the operands are still integers.
6.1 During program invocation, the elements of the args string array are
initialized top command-line arguments.
6.2 The void keyword indicates that the method does not return anything to the
caller.
6.3 Identifiers are abbreviations or names used to represent a particular
variable, class, or method. They can have both uppercase and lowercase,
digits, underscores, and dollar signs, but they cannot start with a digit or
have the same name as a keyword (i.e. main, float, double).
6.4 Keywords are special words in the Java language and have special meanings.
They should not be used for methods/variables.
6.5 Floats and doubles both represent decimal numbers.
6.6 They all represent integers, but they all have different ranges and memory
requirements.
6.7 A string is not a primitive data type in Java. Strings are class objects.
6.8 String name = "Andre";
6.9 The "scope" of a variable is determined by the variable's position in the
program code. The scope indicates the lifetime of a variable. The variable
lives only within its scope.





